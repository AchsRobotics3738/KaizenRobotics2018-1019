package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.Disabled;
import java.util.Set;
import com.qualcomm.robotcore.hardware.Servo;
import com.qualcomm.robotcore.eventloop.opmode.OpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.util.ElapsedTime;
import com.qualcomm.robotcore.util.Range;

@TeleOp(name="Basic: Iterative OpMode", group="Iterative Opmode")
public class Test extends OpMode
{
    // Declare OpMode members.
    private ElapsedTime runtime = new ElapsedTime();
    private DcMotor FR = null;
    private DcMotor BR = null;
    private DcMotor FL = null;
    private DcMotor BL = null;
    private Servo Base = null;
    
    boolean isHeld;
    /*
     * Code to run ONCE when the driver hits INIT
     */
    @Override
    public void init() {
        telemetry.addData("Status", "Initialized");

        // Initialize the hardware variables. Note that the strings used here as parameters
        FR  = hardwareMap.get(DcMotor.class, "Front Right");
        BR  = hardwareMap.get(DcMotor.class, "Back Right");
        FL  = hardwareMap.get(DcMotor.class, "Front Left");
        BL  = hardwareMap.get(DcMotor.class, "Back Left");
        Base = hardwareMap.get(Servo.class, "Base");
        
        // Set Default Positions
        FR.setDirection(DcMotor.Direction.FORWARD);
        FL.setDirection(DcMotor.Direction.REVERSE);
        BR.setDirection(DcMotor.Direction.FORWARD);
        BL.setDirection(DcMotor.Direction.REVERSE);
        Base.setPosition(.5);
            
        isHeld = false;
        
        telemetry.addData("Status", "Initialized");
    }

    /*
     * Code to run REPEATEDLY after the driver hits INIT, but before they hit PLAY
     */
    @Override
    public void init_loop() {
    }

    /*
     * Code to run ONCE when the driver hits PLAY
     */
    @Override
    public void start() {
        runtime.reset();
    }

    /*
     * Code to run REPEATEDLY after the driver hits PLAY but before they hit STOP
     */
    @Override
    public void loop() {
        
        double leftPower;
        double rightPower;

        leftPower  = -gamepad1.left_stick_y ;
        rightPower = -gamepad1.right_stick_y ;
        
        leftPower /= 1.5;
        rightPower /= 1.5;
        
        //Set power of Motors
        FL.setPower(leftPower);
        BL.setPower(leftPower);
        FR.setPower(rightPower);
        BR.setPower(rightPower);
        
        //Move Servo
        if(!isHeld)
        {
            if(gamepad1.left_trigger > 0) {
                Base.setPosition(1);
            }
            else if(gamepad1.right_trigger > 0) {
                Base.setPosition(0);
            }
            else {
                Base.setPosition(.5);
            }
        }
        
        if(gamepad1.right_bumper)
            isHeld = true;
        if(gamepad1.left_bumper)
            isHeld = false;
        
        //ShBasegame time and wheel power.
        telemetry.addData("Status", "Run Time: " + runtime.toString());
        telemetry.addData("Motors", "left (%.2f), right (%.2f)", leftPower, rightPower); 
    }

        
    @Override
    public void stop() {
    }

}
